/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Analytics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Returns exercise analytics for a given user */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Analytics"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Registers a new user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["RegisterUserDto"];
                    "text/json": components["schemas"]["RegisterUserDto"];
                    "application/*+json": components["schemas"]["RegisterUserDto"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["UserDetailDto"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Logs a user in */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["LoginUserDto"];
                    "text/json": components["schemas"]["LoginUserDto"];
                    "application/*+json": components["schemas"]["LoginUserDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["LoginResponseDto"];
                    };
                };
                /** @description Unauthorized */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Exercise": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieves list of exercises for a definition */
        get: {
            parameters: {
                query?: {
                    definition?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Exercise"][];
                    };
                };
            };
        };
        put?: never;
        /** Creates an exercise */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["UpdateExerciseDto"];
                    "text/json": components["schemas"]["UpdateExerciseDto"];
                    "application/*+json": components["schemas"]["UpdateExerciseDto"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Exercise"];
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Exercise/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieves exercise details */
        get: operations["GetExercise"];
        /** Updates exercise details */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["UpdateExerciseDto"];
                    "text/json": components["schemas"]["UpdateExerciseDto"];
                    "application/*+json": components["schemas"]["UpdateExerciseDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Exercise"];
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        /** Deletes an exercise and related resources */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ExerciseDefinition": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieves list of user exercise definitions */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ExerciseDefinitionSummary"][];
                    };
                };
            };
        };
        put?: never;
        /** Creates an exercise definition */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["UpdateExerciseDefinitionDto"];
                    "text/json": components["schemas"]["UpdateExerciseDefinitionDto"];
                    "application/*+json": components["schemas"]["UpdateExerciseDefinitionDto"];
                };
            };
            responses: {
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ExerciseDefinition"];
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/ExerciseDefinition/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieves exercise definition details */
        get: operations["GetExerciseDefinition"];
        /** Updates exercise definition details */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["UpdateExerciseDefinitionDto"];
                    "text/json": components["schemas"]["UpdateExerciseDefinitionDto"];
                    "application/*+json": components["schemas"]["UpdateExerciseDefinitionDto"];
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ExerciseDefinition"];
                    };
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        post?: never;
        /** Deletes an exercise definition and associated resources */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description No Content */
                204: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Forbidden */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
                /** @description Not Found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["ProblemDetails"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/User/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieves a user */
        get: operations["GetUser"];
        put?: never;
        post?: never;
        /** Deletes a user and associated resources */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Analytics: {
            mostFrequentMuscleGroup: components["schemas"]["AnalyticsItem"];
            mostFrequentExercise: components["schemas"]["AnalyticsItem"];
            mostExerciseProgress: components["schemas"]["AnalyticsItem"];
            muscleGroupFrequency: components["schemas"]["AnalyticsItem"][];
            exerciseFrequency: components["schemas"]["AnalyticsItem"][];
            exerciseProgress: components["schemas"]["AnalyticsItem"][];
        };
        AnalyticsItem: {
            marker: string;
            /** Format: double */
            count: number;
        };
        Exercise: {
            /** Format: int32 */
            id: number;
            /** Format: int32 */
            definitionId: number;
            /** Format: date-time */
            date: string;
            /** Format: date-time */
            timeTaken: string;
            sets: components["schemas"]["Set"][];
            /** Format: double */
            readonly netValue?: number | null;
        };
        ExerciseDefinition: {
            /** Format: int32 */
            id: number;
            /** Format: int32 */
            userId: number;
            title: string;
            unit: components["schemas"]["Unit"];
            history: components["schemas"]["ExerciseHistoryItem"][];
            primaryMuscleGroup: components["schemas"]["MuscleGroup"][];
            latestSession: components["schemas"]["Exercise"];
            personalBest: components["schemas"]["PersonalBest"];
        };
        ExerciseDefinitionSummary: {
            /** Format: int32 */
            id: number;
            title: string;
            /** Format: int32 */
            sessionCount: number;
            /** Format: date-time */
            lastSessionDate?: string | null;
            /** Format: double */
            lastImprovement?: number | null;
        };
        ExerciseHistoryItem: {
            /** Format: date-time */
            date: string;
            /** Format: double */
            netValue: number;
            /** Format: double */
            avgValue: number;
            /** Format: double */
            avgReps: number;
            /** Format: int32 */
            sets: number;
            /** Format: date-time */
            timeTaken: string;
        };
        LoginResponseDto: {
            token: string;
            userDetails: components["schemas"]["UserDetailDto"];
        };
        LoginUserDto: {
            email: string;
            password: string;
        };
        /** @enum {string} */
        MuscleGroup: MuscleGroup;
        PersonalBest: {
            topNetExercise: components["schemas"]["Exercise"];
            /** Format: double */
            topAvgValue?: number | null;
            /** Format: int32 */
            topReps?: number | null;
            /** Format: int32 */
            topSets?: number | null;
        };
        ProblemDetails: {
            type?: string | null;
            title?: string | null;
            /** Format: int32 */
            status?: number | null;
            detail?: string | null;
            instance?: string | null;
            [key: string]: unknown;
        };
        RegisterUserDto: {
            firstName: string;
            lastName: string;
            email: string;
            password: string;
        };
        Set: {
            /** Format: double */
            value: number;
            /** Format: int32 */
            reps: number;
        };
        /** @enum {string} */
        Unit: Unit;
        UpdateExerciseDefinitionDto: {
            title: string;
            unit: string;
            /** Format: int32 */
            userId: number;
            primaryMuscleGroup: components["schemas"]["MuscleGroup"][];
        };
        UpdateExerciseDto: {
            /** Format: int32 */
            definitionId: number;
            /** Format: date-time */
            date: string;
            /** Format: date-time */
            timeTaken?: string | null;
            sets: components["schemas"]["Set"][];
        };
        UserDetailDto: {
            /** Format: int32 */
            id: number;
            firstName: string;
            lastName: string;
            email: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetExercise: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Exercise"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetails"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetails"];
                };
            };
        };
    };
    GetExerciseDefinition: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExerciseDefinition"];
                };
            };
            /** @description Forbidden */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetails"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProblemDetails"];
                };
            };
        };
    };
    GetUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
export enum MuscleGroup {
    CHEST = "CHEST",
    FOREARMS = "FOREARMS",
    LATS = "LATS",
    BACK = "BACK",
    NECK = "NECK",
    HAMSTRINGS = "HAMSTRINGS",
    QUADRICEPS = "QUADRICEPS",
    CALVES = "CALVES",
    TRICEPS = "TRICEPS",
    TRAPS = "TRAPS",
    SHOULDERS = "SHOULDERS",
    ABDOMINALS = "ABDOMINALS",
    OBLIQUES = "OBLIQUES",
    GLUTES = "GLUTES",
    BICEPS = "BICEPS"
}
export enum Unit {
    KG = "KG",
    MIN = "MIN",
    BODYWEIGHT = "BODYWEIGHT"
}
